/**
 *  dropdown.css
 *
 *  1   Position the dropdown out of screen bounds since visibility will still
 *      draw space where the element is placed. Using left and right can result
 *      in overflow scrolling. If using dropdown inside a relatively-positioned
 *      parent the top value may not be large enough.
 */

.dropdown {
  background-color: var(--dropdown-background-color);
  border-radius: 0.5rem;
  color: white;
  margin-top: 0.75rem;
  max-width: 24rem;
  min-width: 16rem;
  padding: 0.75rem 0;
  position: absolute;
  top: -999rem; /* 1 */
  transition:
    opacity 160ms ease-in-out,
    transform 160ms ease-in-out,
    visibility 160ms ease-in-out;
  z-index: 1000;
}

.dropdown.dropdown--hidden {
  opacity: 0;
  transform: translateY(-0.75rem);
  visibility: hidden;
}

.dropdown.dropdown--visible {
  visibility: visible;
  opacity: 1;
  transform: translateY(0);
}

.dropdown::after {
  display: block;
  width: 0.75rem;
  height: 0.75rem;
  background-color: var(--dropdown-background-color);
  position: absolute;
  content: '';
  left: 0.75rem;
  top: 0;
  transform: translateY(-50%) rotate(45deg);
}

.dropdown.dropdown--right::after {
  left: auto;
  right: 0.75rem;
}

.dropdown-item {
  background-color: var(--dropdown-item-background-color-default);
  color: var(--dropdown-item-text-color-default);
  display: block;
  padding: var(--dropdown-item-padding);
  width: 100%;
}

.dropdown-item:hover {
  background-color: var(--dropdown-item-background-color-hover);
  color: var(--dropdown-item-text-color-hover);
}

.dropdown-item:focus {
  background-color: var(--dropdown-item-background-color-focus);
  color: var(--dropdown-item-text-color-focus);
}

.dropdown-item:active {
  background-color: var(--dropdown-item-background-color-active);
  color: var(--dropdown-item-text-color-active);
}

.dropdown-divider {
  border-width: 0;
  border-bottom-width: var(--dropdown-divider-border-width);
  border-color: var(--dropdown-divider-border-color);
  border-style: var(--dropdown-divider-border-style);
}