/**
 *  grid.css
 *
 *  A flex-box based grid. This method has a few drawbacks compared to the new
 *  `grid` display, but offers much more versatility and control.
 */

.grid {
  display: flex;
  flex-wrap: wrap;
  margin-left: var(--grid-gutter);
}

/**
 *  Grid Sizes
 */
.grid.grid--xs {
  margin-left: var(--grid-gutter-xs);
}

.grid.grid--sm {
  margin-left: var(--grid-gutter-sm);
}

.grid.grid--lg {
  margin-left: var(--grid-gutter-lg);
}

.grid.grid--xl {
  margin-left: var(--grid-gutter-xl);
}

/**
 *  Grid / Tablet
 */
@media (--tablet) {
  /**
   *  Grid Sizes
   */
  .grid.grid--xs,
  .grid.grid--xs\@tablet {
    margin-left: var(--grid-gutter-xs);
  }
  
  .grid.grid--sm,
  .grid.grid--sm\@tablet {
    margin-left: var(--grid-gutter-sm);
  }
  
  .grid.grid--lg,
  .grid.grid--lg\@tablet {
    margin-left: var(--grid-gutter-lg);
  }

  .grid.grid--xl,
  .grid.grid--xl\@tablet {
    margin-left: var(--grid-gutter-xl);
  }
}

/**
 *  Grid / Desktop
 */
@media (--desktop) {
  /**
   * Grid / Desktop / Sizes
   */
  .grid.grid--xs\@desktop {
    margin-left: var(--grid-gutter-xs);
  }
  
  .grid.grid--sm\@desktop {
    margin-left: var(--grid-gutter-sm);
  }
  
  .grid.grid--lg\@desktop {
    margin-left: var(--grid-gutter-lg);
  }

  .grid.grid--xl\@desktop {
    margin-left: var(--grid-gutter-xl);
  }
}