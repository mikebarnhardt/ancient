/**
 *  stack.css
 *
 *  Automatically adds bottom margins to child elements. This class can override
 *  another elements spacing (or be overriden) based on the cascade. You can opt
 *  to wrap children in a a containing element or use the ".space" class
 *  instead.
 */

.stack > :not(:last-child) { margin-bottom: var(--stack-margin) }
.stack.stack--xs > :not(:last-child) { margin-bottom: var(--stack-xs-margin) }
.stack.stack--sm > :not(:last-child) { margin-bottom: var(--stack-sm-margin) }
.stack.stack--lg > :not(:last-child) { margin-bottom: var(--stack-lg-margin) }
.stack.stack--xl > :not(:last-child) { margin-bottom: var(--stack-xl-margin) }

@media (--tablet) {
  .stack.tablet\:stack--none > :not(:last-child) { margin-bottom: 0 }
  .stack.tablet\:stack--xs > :not(:last-child) { margin-bottom: var(--stack-xs-margin) }
  .stack.tablet\:stack--sm > :not(:last-child) { margin-bottom: var(--stack-sm-margin) }
  .stack.tablet\:stack--lg > :not(:last-child) { margin-bottom: var(--stack-lg-margin) }
  .stack.tablet\:stack--xl > :not(:last-child) { margin-bottom: var(--stack-xl-margin) }
}

@media (--desktop) {
  .stack.desktop\:stack--none > :not(:last-child) { margin-bottom: 0 }
  .stack.desktop\:stack--xs > :not(:last-child) { margin-bottom: var(--stack-xs-margin) }
  .stack.desktop\:stack--sm > :not(:last-child) { margin-bottom: var(--stack-sm-margin) }
  .stack.desktop\:stack--lg > :not(:last-child) { margin-bottom: var(--stack-lg-margin) }
  .stack.desktop\:stack--xl > :not(:last-child) { margin-bottom: var(--stack-xl-margin) }
}